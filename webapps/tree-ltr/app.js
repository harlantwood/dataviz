// Generated by CoffeeScript 1.9.3
var DEMO_HASH, app, getDecendants, render;

DEMO_HASH = 'QmZq1TFx4RF1LbNb9RmEMZxaXpB9UjcFTLRCT4GHzy3Kk2';

app = function() {
  var hash;
  hash = window.location.hash.slice(1);
  console.log(hash);
  if (hash.length > 0) {
    return render(hash);
  } else {
    window.location.hash = '#' + DEMO_HASH;
    return window.location.reload();
  }
};

render = function(hash) {
  var API_REFS_FORMAT;
  API_REFS_FORMAT = encodeURIComponent('<src> <dst> <linkname>');
  return d3.xhr("/api/v0/refs?arg=" + hash + "&recursive&format=" + API_REFS_FORMAT, function(error, xhr) {
    var children, data, dict, dst, linkname, match, refApiPattern, src, whole;
    data = xhr.responseText;
    dict = {};
    refApiPattern = /"Ref": "(\S+) (\S+) (\S+)\\n"/g;
    while (match = refApiPattern.exec(data)) {
      whole = match[0], src = match[1], dst = match[2], linkname = match[3];
      if (dict[src] == null) {
        dict[src] = [];
      }
      dict[src].push({
        Hash: dst,
        Name: linkname
      });
    }
    children = getDecendants(hash, dict);
    this.root = {
      children: children
    };
    this.root.x0 = h / 2;
    this.root.y0 = 0;
    this.root.children.forEach(toggleAll);
    return update(this.root);
  });
};

getDecendants = function(ref, dict) {
  var child, children, decendants, i, len;
  if (!((ref != null) && (dict != null))) {
    throw new Error;
  }
  children = dict[ref];
  if (children != null) {
    for (i = 0, len = children.length; i < len; i++) {
      child = children[i];
      if (child.Hash == null) {
        throw new Error;
      }
      decendants = getDecendants(child.Hash, dict);
      if (decendants != null) {
        child.children = decendants;
      }
    }
    return children;
  }
};

app();
